{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAK,SAAS,aAAa,CAAC,MAC5B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAS,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEzC,SAAS,EAAmB,CAAU,EACpC,OAAO,OAAO,EAAW,OAAO,CAAC,IAAK,IAAI,OAAO,CAAC,IAAK,IACzD,EA2CA,AAzCA,SAAsB,CAAS,CAAE,CAAQ,EACvC,IAAM,EAAY,EAAU,IAAI,CAC9B,SAAC,CAAA,CAAG,CADN,EAEI,OAAA,EAAmB,EAAE,OAAO,CAAC,MAAM,EACnC,EAAmB,EAAE,OAAO,CAAC,MAAM,C,EAGvC,CAAA,EAAS,SAAS,CAAG,GAEhB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAgB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAhB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAS,MAAM,CAAC,E,C,C,M,E,CADb,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGP,EA6Ba,EAAI,GACjB,AA5BA,SAAsB,CAAI,EACxB,IAAM,EAAe,EAAE,CACnB,EAAW,CAAC,EACZ,EAAe,GACf,EAAW,GACX,EAAS,GACT,EAAM,GAEL,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAoB,CAApB,IAAM,EAAN,EAAA,KAAA,CACH,EAAe,EAAK,SAAS,CAAC,IAAI,GAClC,EAAW,EAAK,OAAO,CAAC,QAAQ,CAChC,EAAS,EAAK,OAAO,CAAC,MAAM,CAC5B,EAAM,EAAK,OAAO,CAAC,GAAG,CAEtB,EAAW,CACT,aAAA,EACA,SAAA,EACA,OAAA,EACA,IAAA,CACF,EAEA,EAAa,IAAI,CAAC,EACpB,C,C,M,E,CAdK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAiBP,EAGa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar ul = document.querySelector(\"ul\");\nvar li = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction getPrepearedSalary(salaryData) {\n    return Number(salaryData.replace(\",\", \"\").replace(\"$\", \"\"));\n}\nfunction sortBySalary(arrayOfLi, ulParent) {\n    var sortedArr = arrayOfLi.sort(function(a, b) {\n        return getPrepearedSalary(b.dataset.salary) - getPrepearedSalary(a.dataset.salary);\n    });\n    ulParent.innerHTML = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = sortedArr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var liItem = _step.value;\n            ulParent.append(liItem);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction getEmployees(list) {\n    var arrEmployees = [];\n    var employee = {};\n    var employeeName = \"\";\n    var position = \"\";\n    var salary = \"\";\n    var age = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var item = _step.value;\n            employeeName = item.innerHTML.trim();\n            position = item.dataset.position;\n            salary = item.dataset.salary;\n            age = item.dataset.age;\n            employee = {\n                employeeName: employeeName,\n                position: position,\n                salary: salary,\n                age: age\n            };\n            arrEmployees.push(employee);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return arrEmployees;\n}\nsortBySalary(li, ul);\ngetEmployees(li);\n\n//# sourceMappingURL=index.24ae5604.js.map\n","'use strict';\n\nconst ul = document.querySelector('ul');\nconst li = [...document.querySelectorAll('li')];\n\nfunction getPrepearedSalary(salaryData) {\n  return Number(salaryData.replace(',', '').replace('$', ''));\n}\n\nfunction sortBySalary(arrayOfLi, ulParent) {\n  const sortedArr = arrayOfLi.sort(\n    (a, b) =>\n      getPrepearedSalary(b.dataset.salary) -\n      getPrepearedSalary(a.dataset.salary),\n  );\n\n  ulParent.innerHTML = '';\n\n  for (const liItem of sortedArr) {\n    ulParent.append(liItem);\n  }\n}\n\nfunction getEmployees(list) {\n  const arrEmployees = [];\n  let employee = {};\n  let employeeName = '';\n  let position = '';\n  let salary = '';\n  let age = '';\n\n  for (const item of list) {\n    employeeName = item.innerHTML.trim();\n    position = item.dataset.position;\n    salary = item.dataset.salary;\n    age = item.dataset.age;\n\n    employee = {\n      employeeName,\n      position,\n      salary,\n      age,\n    };\n\n    arrEmployees.push(employee);\n  }\n\n  return arrEmployees;\n}\n\nsortBySalary(li, ul);\ngetEmployees(li);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","ul","document","querySelector","li","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","getPrepearedSalary","salaryData","Number","replace","sortBySalary","arrayOfLi","ulParent","sortedArr","sort","a","b","dataset","salary","innerHTML","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","liItem","value","append","err","return","getEmployees","list","arrEmployees","employee","employeeName","position","age","item","trim","push"],"version":3,"file":"index.24ae5604.js.map"}